{{ if .Values.enabled }}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: pipelines
spec:
  replicas: 1
  strategy:
    type: Recreate
  {{ if .Values.enableAntiAffinity }}
  affinity:
    # ensure pipelines won't be on the same node as elasticsearch
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - elasticsearch
            # - postgres
        topologyKey: "kubernetes.io/hostname"
  {{ end }}
  template:
    metadata:
      labels:
        app: pipelines
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{ if .Values.global.persistentDataVolume.hostname }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.global.persistentDataVolume.hostname | quote }}
      {{ end }}
      terminationGracePeriodSeconds: 5
      containers:
      - name: pipelines
        image: {{ .Values.image | default "budgetkey/budgetkey-data-pipelines:latest" | quote }}
        ports:
        - containerPort: 8000
        resources: {{ .Values.resources }}
        envFrom:
        - configMapRef:
            name: pipelines
        {{ if .Values.secretName }}
        # override the values from configmap
        - secretRef:
            name: {{ .Values.secretName | quote }}
        {{ end }}
        volumeMounts:
        - mountPath: /var/datapackages
          name: data
          subPath: datapackages
        - mountPath: /var/redis
          name: data
          subPath: redis
        - mountPath: /home/dpp/.ssh
          name: data
          subPath: ssh
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources: {"requests": {"cpu": "50m", "memory": "150Mi"}, "limits": {"memory": "300Mi"}}
        volumeMounts:
        - name: pipelines-nginx-conf
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - mountPath: /var/datapackages
          name: data
          subPath: datapackages
      volumes:
      - name: pipelines-nginx-conf
        configMap:
          name: pipelines-nginx-conf
      - name: data
      {{ if .Values.gcePersistentDiskName }}
        gcePersistentDisk:
          pdName: {{ .Values.gcePersistentDiskName | quote }}
      {{ else }}
        {{ .Values.global.persistentDataVolume.type }}: {
          {{ if eq .Values.global.persistentDataVolume.type "hostPath" }}
            "path": "{{ .Values.global.persistentDataVolume.basePath }}/pipelines-data",
            "type": "DirectoryOrCreate"
          {{ end }}
        }
      {{ end }}
{{ end }}
